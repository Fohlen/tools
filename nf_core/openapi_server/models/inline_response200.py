# coding: utf-8

from __future__ import absolute_import
from datetime import datetime  # noqa: F401

from nf_core.openapi_server.models.base_model_ import Model
from nf_core.openapi_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event=None, utc_time=None):  # noqa: E501
        """InlineResponse200 - a model defined in OpenAPI

        :param event: The event of this InlineResponse200.  # noqa: E501
        :type event: str
        :param utc_time: The utc_time of this InlineResponse200.  # noqa: E501
        :type utc_time: datetime
        """
        self.openapi_types = {
            'event': str,
            'utc_time': datetime
        }

        self.attribute_map = {
            'event': 'event',
            'utc_time': 'utcTime'
        }

        self._event = event
        self._utc_time = utc_time

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event(self):
        """Gets the event of this InlineResponse200.


        :return: The event of this InlineResponse200.
        :rtype: str
        """
        return self._event

    @event.setter
    def event(self, event):
        """Sets the event of this InlineResponse200.


        :param event: The event of this InlineResponse200.
        :type event: str
        """
        if event is None:
            raise ValueError("Invalid value for `event`, must not be `None`")  # noqa: E501

        self._event = event

    @property
    def utc_time(self):
        """Gets the utc_time of this InlineResponse200.


        :return: The utc_time of this InlineResponse200.
        :rtype: datetime
        """
        return self._utc_time

    @utc_time.setter
    def utc_time(self, utc_time):
        """Sets the utc_time of this InlineResponse200.


        :param utc_time: The utc_time of this InlineResponse200.
        :type utc_time: datetime
        """
        if utc_time is None:
            raise ValueError("Invalid value for `utc_time`, must not be `None`")  # noqa: E501

        self._utc_time = utc_time
